{{!--
/**
 * Player Spell Book Wizard Spellbook Tab Template
 *
 * PURPOSE:
 * Specialized spellbook interface for wizard characters providing spell learning,
 * spellbook management, and wizard-specific spell preparation functionality.
 * Displays wizard-specific rules and information while serving as a container
 * for dynamically rendered spell content with wizard-specific features.
 *
 * CONTEXT REQUIREMENTS:
 * @param {Object} tab - Tab configuration object with display properties
 * @param {string} tab.id - Unique tab identifier for DOM targeting
 * @param {string} tab.cssClass - CSS classes for tab styling and wizard-specific behavior
 * @param {string} tab.group - Tab group identifier for coordinated navigation
 * @param {string} classIdentifier - Unique identifier for the wizard class
 * @param {boolean} hasError - Whether an error condition exists for display
 * @param {string} errorMessage - Error message text for display (when hasError is true)
 * @param {boolean} isWizard - Whether character has wizard class levels
 * @param {boolean} isForceWizard - Whether wizard functionality is force-enabled
 *
 * ACCESSIBILITY FEATURES:
 * - Tab container with proper data attributes for wizard tab navigation
 * - Wizard rules section with semantic header structure
 * - Help icon with descriptive tooltip for wizard spellbook rules
 * - Error display uses accessible alert patterns
 * - Filter results message with role="status" for screen reader updates
 * - Semantic content organization with containers and headers
 *
 * CUSTOMIZATION POINTS:
 * - Error display uses shared error message component for consistency
 * - Wizard availability check controls content display
 * - Spellbook rules section provides wizard-specific context
 * - Dynamic spell level rendering adapts to wizard spellbook contents
 * - Filter results message toggles based on search state
 *
 * INTEGRATION:
 * - Connects to PlayerSpellBook application for wizard-specific functionality
 * - Uses shared error message component from templates/components/
 * - Supports dynamic spell level rendering through JavaScript
 * - Integrates with wizard spell learning and preparation systems
 * - Works with spellbook-specific filtering and search functionality
 */
--}}

<div class="wizardbook tab {{tab.cssClass}}" data-tab="{{tab.id}}" data-group="{{tab.group}}"
	data-class-identifier="{{classIdentifier}}">

	<div class="spells-container">
		<!-- Wizard Header Section -->
		<div class="class-header">
			<h2>{{className}} Spellbook</h2>
			{{#if wizardTotalSpellbookCount}}
				<div class="wizard-spellbook-info">
					<span class="wizard-spell-count">
						{{!-- @todo: Remove hardcoded text --}}
						{{wizardTotalSpellbookCount}}/{{wizardMaxSpellbookCount}} spells in spellbook
					</span>
					{{#if wizardHasFreeSpells}}
						<span class="wizard-free-spells">
							{{!-- @todo: Remove hardcoded text --}}
							{{wizardRemainingFreeSpells}} free spells remaining
						</span>
					{{/if}}
				</div>
			{{/if}}
		</div>

		<!-- Render Spell Levels -->
		{{#each spellLevels as |levelData|}}
			{{> "modules/spell-book/templates/components/spell-level.hbs"
        level=levelData.level
        levelName=levelData.levelName
        spells=levelData.spells
        isCollapsed=levelData.isCollapsed
        preparedCount=levelData.preparedCount
        cantripCounter=levelData.cantripCounter
				isWizardContext=true}}
		{{/each}}

		<!-- Filter Results Message -->
		<div class="no-filter-results" style="display: none;" role="status">
			No spells match your filters.
		</div>
	</div>
</div>
